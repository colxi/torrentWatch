{"version":3,"sources":["background.es6"],"names":[],"mappings":";;;;;;AAIA,CAAC,YAAU;AACP,QAAI,SAAS,SAAS,aAAT,CAAuB,QAAvB,CAAb;AACA,WAAO,IAAP,GAAc,iBAAd;AACA,WAAO,GAAP,GAAa,yBAAb;AACH,WAAO,MAAP,GAAgB,OAAO,kBAAP,GAA4B,YAAW;AACtD,YAAK,CAAC,KAAK,UAAN,IAAoB,KAAK,UAAL,KAAoB,QAAxC,IAAoD,KAAK,UAAL,KAAoB,UAA7E,EAA0F,GAAG,KAAH,CAAU,UAAV;AAC1F,KAFD;AAGG,aAAS,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyC,WAAzC,CAAqD,MAArD;;AAGA,aAAS,UAAT,GAAqB;AACjB,WAAG,GAAH,CAAO,qCAAqC,OAAO,GAAP,CAAW,UAAX,GAAwB,OAApE;;AAEA,YAAI,QAAQ;AACR,qBAAU,IADF;AAER,sBAAU;AAFF,SAAZ;AAIA,eAAO,OAAP,CAAe,SAAf,CAAyB,WAAzB,CAAqC,gBAAQ;;;;AAIzC,eAAG,GAAH,CAAO,gDAAP;AACA,kBAAM,QAAN,GAAiB,OAAO,SAAP,CAAiB,QAAjB,CAA0B,EAAE,MAAM,OAAR,EAA1B,EAA6C,CAA7C,EAAgD,QAAjE;AACA,kBAAM,OAAN,GAAgB,GAAG,IAAH,CAAS,MAAM,QAAN,CAAe,aAAf,CAA6B,MAA7B,CAAT,EAA+C,EAA/C,CAAhB;;;;AAIA,gBAAI,YAAY,KAAK,YAAL,CAAkB,WAAlB,CAA+B,aAAI;AAC/C,mBAAG,GAAH,CAAO,gDAAP;AACA,mBAAG,SAAH;AACA,sBAAM,OAAN,GAAgB,IAAhB;AACA,sBAAM,QAAN,GAAiB,IAAjB;AACA,4BAAY,IAAZ;AACH,aANe,CAAhB;AAOH,SAjBD;;AAmBA,eAAO,IAAI,OAAJ,CAAa,oBAAY;AAAE,eAAG,IAAH,CAAQ,UAAR,CAAmB,KAAnB;AAA2B,SAAtD,CAAP;AACH;AACJ,CAtCD","file":"background.js","sourcesContent":["/* jsHint inline configuration : */\r\n/* jshint undef: true, unused: false */\r\n/* global chrome , System , rivets , sightglass, pg */\r\n\r\n(function(){\r\n    let script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.src = '/scripts/pomegranade.js';\r\n\tscript.onload = script.onreadystatechange = function() {\r\n\t\tif ( !this.readyState || this.readyState === 'loaded' || this.readyState === 'complete' ) pg.ready( initialize );\r\n\t};\r\n    document.getElementsByTagName('head')[0].appendChild(script);\r\n\r\n\r\n    function initialize(){\r\n        pg.log('*** Starting Torrent Observer v.' + chrome.app.getDetails().version );\r\n        // LISTENERS FOR POPUP OPEN/CLOSE\r\n        let popup = {\r\n            binding : null,\r\n            document: null\r\n        };\r\n        chrome.runtime.onConnect.addListener(port => {\r\n            //\r\n            //\r\n            // popup OPEN\r\n            pg.log('pg.chromeExt.popupObserver(): Popup opened!...');\r\n            popup.document = chrome.extension.getViews({ type: 'popup' })[0].document;\r\n            popup.binding = pg.bind( popup.document.querySelector('html'), {} );\r\n            //\r\n            //\r\n            // popup CLOSE listener\r\n            let disconect = port.onDisconnect.addListener( x=> {\r\n                pg.log('pg.chromeExt.popupObserver(): Popup closed!...');\r\n                pg.unbindAll();\r\n                popup.binding = null;\r\n                popup.document = null;\r\n                disconect = null;\r\n            });\r\n        });\r\n        // LAUNCH APPLICATION MAIN CONTROLLER, for initialization\r\n        return new Promise( _resolve => { pg.load.controller('app') });\r\n    }\r\n})();\r\n"]}