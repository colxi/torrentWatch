{"version":3,"sources":["../../../src/scripts/lib/ObjTree.js"],"names":[],"mappings":"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","file":"ObjTree.js","sourcesContent":["/*\n *\tBased on ObjTree.js from\n *\tYusuke Kawasaki http://www.kawa.net/\n *\n*/\n\n// If running in Node.js, need package library 'xmldom'.\n// Provides the DOMParser object. Everything else stays the same!\nif (typeof window === 'undefined') {\n\tvar DOMParser = require('xmldom').DOMParser;\n\n\tvar window = {};\n\twindow.DOMParser = true;\n}\n\n(function(global) {\n\tvar XML;\n\n\t// ========================================================================\n\t//  XML.ObjTree -- XML source code from/to JavaScript object like E4X\n\t// ========================================================================\n\tif ( typeof(XML) == 'undefined' ) XML = function() {};\n\n\t//  constructor\n\n\tXML.ObjTree = function () {\n\t    return this;\n\t};\n\n\t//  class variables\n\n\tXML.ObjTree.VERSION = \"0.24\";\n\n\t//  object prototype\n\n\tXML.ObjTree.prototype.xmlDecl = '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\\n';\n\tXML.ObjTree.prototype.attr_prefix = '-';\n\tXML.ObjTree.prototype.overrideMimeType = 'text/xml';\n\n\t//  method: parseXML( xmlsource )\n\n\tXML.ObjTree.prototype.parseXML = function ( xml ) {\n\t    var root;\n\t    if ( window.DOMParser ) {\n\t        var xmldom = new DOMParser();\n\t//      xmldom.async = false;           // DOMParser is always sync-mode\n\t        var dom = xmldom.parseFromString( xml, \"application/xml\" );\n\t        if ( ! dom ) return;\n\t        root = dom.documentElement;\n\t    } else if ( window.ActiveXObject ) {\n\t        xmldom = new ActiveXObject('Microsoft.XMLDOM');\n\t        xmldom.async = false;\n\t        xmldom.loadXML( xml );\n\t        root = xmldom.documentElement;\n\t    }\n\t    if ( ! root ) return;\n\t    return this.parseDOM( root );\n\t};\n\n\t//  method: parseHTTP( url, options, callback )\n\n\tXML.ObjTree.prototype.parseHTTP = function ( url, options, callback ) {\n\t    var myopt = {};\n\t    for( var key in options ) {\n\t        myopt[key] = options[key];                  // copy object\n\t    }\n\t    if ( ! myopt.method ) {\n\t        if ( typeof(myopt.postBody) == \"undefined\" &&\n\t             typeof(myopt.postbody) == \"undefined\" &&\n\t             typeof(myopt.parameters) == \"undefined\" ) {\n\t            myopt.method = \"get\";\n\t        } else {\n\t            myopt.method = \"post\";\n\t        }\n\t    }\n\t    if ( callback ) {\n\t        myopt.asynchronous = true;                  // async-mode\n\t        var __this = this;\n\t        var __func = callback;\n\t        var __save = myopt.onComplete;\n\t        myopt.onComplete = function ( trans ) {\n\t            var tree;\n\t            if ( trans && trans.responseXML && trans.responseXML.documentElement ) {\n\t                tree = __this.parseDOM( trans.responseXML.documentElement );\n\t            } else if ( trans && trans.responseText ) {\n\t                tree = __this.parseXML( trans.responseText );\n\t            }\n\t            __func( tree, trans );\n\t            if ( __save ) __save( trans );\n\t        };\n\t    } else {\n\t        myopt.asynchronous = false;                 // sync-mode\n\t    }\n\t    var trans;\n\t    if ( typeof(HTTP) != \"undefined\" && HTTP.Request ) {\n\t        myopt.uri = url;\n\t        var req = new HTTP.Request( myopt );        // JSAN\n\t        if ( req ) trans = req.transport;\n\t    } else if ( typeof(Ajax) != \"undefined\" && Ajax.Request ) {\n\t        var req = new Ajax.Request( url, myopt );   // ptorotype.js\n\t        if ( req ) trans = req.transport;\n\t    }\n\t//  if ( trans && typeof(trans.overrideMimeType) != \"undefined\" ) {\n\t//      trans.overrideMimeType( this.overrideMimeType );\n\t//  }\n\t    if ( callback ) return trans;\n\t    if ( trans && trans.responseXML && trans.responseXML.documentElement ) {\n\t        return this.parseDOM( trans.responseXML.documentElement );\n\t    } else if ( trans && trans.responseText ) {\n\t        return this.parseXML( trans.responseText );\n\t    }\n\t}\n\n\t//  method: parseDOM( documentroot )\n\n\tXML.ObjTree.prototype.parseDOM = function ( root ) {\n\t    if ( ! root ) return;\n\n\t    this.__force_array = {};\n\t    if ( this.force_array ) {\n\t        for( var i=0; i<this.force_array.length; i++ ) {\n\t            this.__force_array[this.force_array[i]] = 1;\n\t        }\n\t    }\n\n\t    var json = this.parseElement( root );   // parse root node\n\t    if ( this.__force_array[root.nodeName] ) {\n\t        json = [ json ];\n\t    }\n\t    if ( root.nodeType != 11 ) {            // DOCUMENT_FRAGMENT_NODE\n\t        var tmp = {};\n\t        tmp[root.nodeName] = json;          // root nodeName\n\t        json = tmp;\n\t    }\n\n\t\tif ( this.soft_arrays ) {\n\t\t\tvar augmentObject = function ( obj ) {\n\t\t\t\tif ( typeof obj !== 'string' ) {\n\t\t\t\t\tfor ( var property in obj ) {\n\t\t\t\t\t\taugmentObject( obj[property] );\n\t\t\t\t\t}\n\t\t\t\t\tif ( ! obj.length ) {\n\t\t\t\t\t\tobj.length = 1; obj[0] = obj;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\taugmentObject( json );\n\t\t}\n\n\t    return json;\n\t};\n\n\t//  method: parseElement( element )\n\n\tXML.ObjTree.prototype.parseElement = function ( elem ) {\n\t    //  COMMENT_NODE\n\t    if ( elem.nodeType == 7 ) {\n\t        return;\n\t    }\n\n\t    //  TEXT_NODE CDATA_SECTION_NODE\n\t    if ( elem.nodeType == 3 || elem.nodeType == 4 ) {\n\t        var bool = elem.nodeValue.match( /[^\\x00-\\x20]/ );\n\t        if ( bool == null ) return;     // ignore white spaces\n\t        return elem.nodeValue;\n\t    }\n\n\t    var retval;\n\t    var cnt = {};\n\n\t    //  parse attributes\n\t    if ( elem.attributes && elem.attributes.length ) {\n\t        retval = {};\n\t        for ( var i=0; i<elem.attributes.length; i++ ) {\n\t            var key = elem.attributes[i].nodeName;\n\t            if ( typeof(key) != \"string\" ) continue;\n\t            var val = elem.attributes[i].nodeValue;\n\t            if ( ! val ) continue;\n\t            key = this.attr_prefix + key;\n\t            if ( typeof(cnt[key]) == \"undefined\" ) cnt[key] = 0;\n\t            cnt[key] ++;\n\t            this.addNode( retval, key, cnt[key], val );\n\t        }\n\t    }\n\n\t    //  parse child nodes (recursive)\n\t    if ( elem.childNodes && elem.childNodes.length ) {\n\t        var textonly = true;\n\t        if ( retval ) textonly = false;        // some attributes exists\n\t        for ( var i=0; i<elem.childNodes.length && textonly; i++ ) {\n\t            var ntype = elem.childNodes[i].nodeType;\n\t            if ( ntype == 3 || ntype == 4 ) continue;\n\t            textonly = false;\n\t        }\n\t        if ( textonly ) {\n\t            if ( ! retval ) retval = \"\";\n\t            for ( var i=0; i<elem.childNodes.length; i++ ) {\n\t                retval += elem.childNodes[i].nodeValue;\n\t            }\n\t        } else {\n\t            if ( ! retval ) retval = {};\n\t            for ( var i=0; i<elem.childNodes.length; i++ ) {\n\t                var key = elem.childNodes[i].nodeName;\n\t                if ( typeof(key) != \"string\" ) continue;\n\t                var val = this.parseElement( elem.childNodes[i] );\n\t                if ( ! val ) continue;\n\t                if ( typeof(cnt[key]) == \"undefined\" ) cnt[key] = 0;\n\t                cnt[key] ++;\n\t                this.addNode( retval, key, cnt[key], val );\n\t            }\n\t        }\n\t    }\n\t    return retval;\n\t};\n\n\t//  method: addNode( hash, key, count, value )\n\n\tXML.ObjTree.prototype.addNode = function ( hash, key, cnts, val ) {\n\t    if ( this.__force_array[key] ) {\n\t        if ( cnts == 1 ) hash[key] = [];\n\t        hash[key][hash[key].length] = val;      // push\n\t    } else if ( cnts == 1 ) {                   // 1st sibling\n\t        hash[key] = val;\n\t    } else if ( cnts == 2 ) {                   // 2nd sibling\n\t        hash[key] = [ hash[key], val ];\n\t    } else {                                    // 3rd sibling and more\n\t        hash[key][hash[key].length] = val;\n\t    }\n\t};\n\n\t//  method: writeXML( tree )\n\n\tXML.ObjTree.prototype.writeXML = function ( tree ) {\n\t    var xml = this.hash_to_xml( null, tree );\n\t    return this.xmlDecl + xml;\n\t};\n\n\t//  method: hash_to_xml( tagName, tree )\n\n\tXML.ObjTree.prototype.hash_to_xml = function ( name, tree ) {\n\t    var elem = [];\n\t    var attr = [];\n\t    for( var key in tree ) {\n\t        if ( ! tree.hasOwnProperty(key) ) continue;\n\t        var val = tree[key];\n\t        if ( key.charAt(0) != this.attr_prefix ) {\n\t            if ( typeof(val) == \"undefined\" || val == null ) {\n\t                elem[elem.length] = \"<\"+key+\" />\";\n\t            } else if ( typeof(val) == \"object\" && val.constructor == Array ) {\n\t                elem[elem.length] = this.array_to_xml( key, val );\n\t            } else if ( typeof(val) == \"object\" ) {\n\t                elem[elem.length] = this.hash_to_xml( key, val );\n\t            } else {\n\t                elem[elem.length] = this.scalar_to_xml( key, val );\n\t            }\n\t        } else {\n\t            attr[attr.length] = \" \"+(key.substring(1))+'=\"'+(this.xml_escape( val ))+'\"';\n\t        }\n\t    }\n\t    var jattr = attr.join(\"\");\n\t    var jelem = elem.join(\"\");\n\t    if ( typeof(name) == \"undefined\" || name == null ) {\n\t        // no tag\n\t    } else if ( elem.length > 0 ) {\n\t        if ( jelem.match( /\\n/ )) {\n\t            jelem = \"<\"+name+jattr+\">\\n\"+jelem+\"</\"+name+\">\\n\";\n\t        } else {\n\t            jelem = \"<\"+name+jattr+\">\"  +jelem+\"</\"+name+\">\\n\";\n\t        }\n\t    } else {\n\t        jelem = \"<\"+name+jattr+\" />\\n\";\n\t    }\n\t    return jelem;\n\t};\n\n\t//  method: array_to_xml( tagName, array )\n\n\tXML.ObjTree.prototype.array_to_xml = function ( name, array ) {\n\t    var out = [];\n\t    for( var i=0; i<array.length; i++ ) {\n\t        var val = array[i];\n\t        if ( typeof(val) == \"undefined\" || val == null ) {\n\t            out[out.length] = \"<\"+name+\" />\";\n\t        } else if ( typeof(val) == \"object\" && val.constructor == Array ) {\n\t            out[out.length] = this.array_to_xml( name, val );\n\t        } else if ( typeof(val) == \"object\" ) {\n\t            out[out.length] = this.hash_to_xml( name, val );\n\t        } else {\n\t            out[out.length] = this.scalar_to_xml( name, val );\n\t        }\n\t    }\n\t    return out.join(\"\");\n\t};\n\n\t//  method: scalar_to_xml( tagName, text )\n\n\tXML.ObjTree.prototype.scalar_to_xml = function ( name, text ) {\n\t    if ( name == \"#text\" ) {\n\t        return this.xml_escape(text);\n\t    } else {\n\t        return \"<\"+name+\">\"+this.xml_escape(text)+\"</\"+name+\">\\n\";\n\t    }\n\t};\n\n\t//  method: xml_escape( text )\n\n\tXML.ObjTree.prototype.xml_escape = function ( text ) {\n\t    return String(text).replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/\"/g,'&quot;');\n\t};\n\n\tif (typeof exports !== 'undefined') {\n\t\tif (typeof module !== 'undefined' && module.exports) {\n\t      exports = module.exports = XML;\n\t    }\n\t\texports.XML = XML;\n\t} else {\n\t\tif (typeof global.UTIL === 'undefined') {\n\t\t\tglobal.UTIL = {};\n\t\t}\n\t\tglobal.UTIL.XML = XML;\n\t}\n\n}(window));\n\n\n/*\n// ========================================================================\n\n=head1 NAME\n\nXML.ObjTree -- XML source code from/to JavaScript object like E4X\n\n=head1 SYNOPSIS\n\n    var xotree = new XML.ObjTree();\n    var tree1 = {\n        root: {\n            node: \"Hello, World!\"\n        }\n    };\n    var xml1 = xotree.writeXML( tree1 );        // object tree to XML source\n    alert( \"xml1: \"+xml1 );\n\n    var xml2 = '<?xml version=\"1.0\"?><response><error>0</error></response>';\n    var tree2 = xotree.parseXML( xml2 );        // XML source to object tree\n    alert( \"error: \"+tree2.response.error );\n\n=head1 DESCRIPTION\n\nXML.ObjTree class is a parser/generater between XML source code\nand JavaScript object like E4X, ECMAScript for XML.\nThis is a JavaScript version of the XML::TreePP module for Perl.\nThis also works as a wrapper for XMLHTTPRequest and successor to JKL.ParseXML class\nwhen this is used with prototype.js or JSAN's HTTP.Request class.\n\n=head2 JavaScript object tree format\n\nA sample XML source:\n\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <family name=\"Kawasaki\">\n        <father>Yasuhisa</father>\n        <mother>Chizuko</mother>\n        <children>\n            <girl>Shiori</girl>\n            <boy>Yusuke</boy>\n            <boy>Kairi</boy>\n        </children>\n    </family>\n\nIts JavaScript object tree like JSON/E4X:\n\n    {\n        'family': {\n            '-name':    'Kawasaki',\n            'father':   'Yasuhisa',\n            'mother':   'Chizuko',\n            'children': {\n                'girl': 'Shiori'\n                'boy': [\n                    'Yusuke',\n                    'Kairi'\n                ]\n            }\n        }\n    };\n\nEach elements are parsed into objects:\n\n    tree.family.father;             # the father's given name.\n\nPrefix '-' is inserted before every attributes' name.\n\n    tree.family[\"-name\"];           # this family's family name\n\nA array is used because this family has two boys.\n\n    tree.family.children.boy[0];    # first boy's name\n    tree.family.children.boy[1];    # second boy's name\n    tree.family.children.girl;      # (girl has no other sisiters)\n\n=head1 METHODS\n\n=head2 xotree = new XML.ObjTree()\n\nThis constructor method returns a new XML.ObjTree object.\n\n=head2 xotree.force_array = [ \"rdf:li\", \"item\", \"-xmlns\" ];\n\nThis property allows you to specify a list of element names\nwhich should always be forced into an array representation.\nThe default value is null, it means that context of the elements\nwill determine to make array or to keep it scalar.\n\n=head2 xotree.attr_prefix = '@';\n\nThis property allows you to specify a prefix character which is\ninserted before each attribute names.\nInstead of default prefix '-', E4X-style prefix '@' is also available.\nThe default character is '-'.\nOr set '@' to access attribute values like E4X, ECMAScript for XML.\nThe length of attr_prefix must be just one character and not be empty.\n\n=head2 xotree.xmlDecl = '';\n\nThis library generates an XML declaration on writing an XML code per default.\nThis property forces to change or leave it empty.\n\n=head2 tree = xotree.parseXML( xmlsrc );\n\nThis method loads an XML document using the supplied string\nand returns its JavaScript object converted.\n\n=head2 tree = xotree.parseDOM( domnode );\n\nThis method parses a DOM tree (ex. responseXML.documentElement)\nand returns its JavaScript object converted.\n\n=head2 tree = xotree.parseHTTP( url, options );\n\nThis method loads a XML file from remote web server\nand returns its JavaScript object converted.\nXMLHTTPRequest's synchronous mode is always used.\nThis mode blocks the process until the response is completed.\n\nFirst argument is a XML file's URL\nwhich must exist in the same domain as parent HTML file's.\nCross-domain loading is not available for security reasons.\n\nSecond argument is options' object which can contains some parameters:\nmethod, postBody, parameters, onLoading, etc.\n\nThis method requires JSAN's L<HTTP.Request> class or prototype.js's Ajax.Request class.\n\n=head2 xotree.parseHTTP( url, options, callback );\n\nIf a callback function is set as third argument,\nXMLHTTPRequest's asynchronous mode is used.\n\nThis mode calls a callback function with XML file's JavaScript object converted\nafter the response is completed.\n\n=head2 xmlsrc = xotree.writeXML( tree );\n\nThis method parses a JavaScript object tree\nand returns its XML source generated.\n\n=head1 EXAMPLES\n\n=head2 Text node and attributes\n\nIf a element has both of a text node and attributes\nor both of a text node and other child nodes,\ntext node's value is moved to a special node named \"#text\".\n\n    var xotree = new XML.ObjTree();\n    var xmlsrc = '<span class=\"author\">Kawasaki Yusuke</span>';\n    var tree = xotree.parseXML( xmlsrc );\n    var class = tree.span[\"-class\"];        # attribute\n    var name  = tree.span[\"#text\"];         # text node\n\n=head2 parseHTTP() method with HTTP-GET and sync-mode\n\nHTTP/Request.js or prototype.js must be loaded before calling this method.\n\n    var xotree = new XML.ObjTree();\n    var url = \"http://example.com/index.html\";\n    var tree = xotree.parseHTTP( url );\n    xotree.attr_prefix = '@';                   // E4X-style\n    alert( tree.html[\"@lang\"] );\n\nThis code shows C<lang=\"\"> attribute from a X-HTML source code.\n\n=head2 parseHTTP() method with HTTP-POST and async-mode\n\nThird argument is a callback function which is called on onComplete.\n\n    var xotree = new XML.ObjTree();\n    var url = \"http://example.com/mt-tb.cgi\";\n    var opts = {\n        postBody:   \"title=...&excerpt=...&url=...&blog_name=...\"\n    };\n    var func = function ( tree ) {\n        alert( tree.response.error );\n    };\n    xotree.parseHTTP( url, opts, func );\n\nThis code send a trackback ping and shows its response code.\n\n=head2 Simple RSS reader\n\nThis is a RSS reader which loads RDF file and displays all items.\n\n    var xotree = new XML.ObjTree();\n    xotree.force_array = [ \"rdf:li\", \"item\" ];\n    var url = \"http://example.com/news-rdf.xml\";\n    var func = function( tree ) {\n        var elem = document.getElementById(\"rss_here\");\n        for( var i=0; i<tree[\"rdf:RDF\"].item.length; i++ ) {\n            var divtag = document.createElement( \"div\" );\n            var atag = document.createElement( \"a\" );\n            atag.href = tree[\"rdf:RDF\"].item[i].link;\n            var title = tree[\"rdf:RDF\"].item[i].title;\n            var tnode = document.createTextNode( title );\n            atag.appendChild( tnode );\n            divtag.appendChild( atag );\n            elem.appendChild( divtag );\n        }\n    };\n    xotree.parseHTTP( url, {}, func );\n\n=head2  XML-RPC using writeXML, prototype.js and parseDOM\n\nIf you wish to use prototype.js's Ajax.Request class by yourself:\n\n    var xotree = new XML.ObjTree();\n    var reqtree = {\n        methodCall: {\n            methodName: \"weblogUpdates.ping\",\n            params: {\n                param: [\n                    { value: \"Kawa.net xp top page\" },  // 1st param\n                    { value: \"http://www.kawa.net/\" }   // 2nd param\n                ]\n            }\n        }\n    };\n    var reqxml = xotree.writeXML( reqtree );       // JS-Object to XML code\n    var url = \"http://example.com/xmlrpc\";\n    var func = function( req ) {\n        var resdom = req.responseXML.documentElement;\n        xotree.force_array = [ \"member\" ];\n        var restree = xotree.parseDOM( resdom );   // XML-DOM to JS-Object\n        alert( restree.methodResponse.params.param.value.struct.member[0].value.string );\n    };\n    var opt = {\n        method:         \"post\",\n        postBody:       reqxml,\n        asynchronous:   true,\n        onComplete:     func\n    };\n    new Ajax.Request( url, opt );\n\n=head1 AUTHOR\n\nYusuke Kawasaki http://www.kawa.net/\n\n=head1 COPYRIGHT AND LICENSE\n\nCopyright (c) 2005-2006 Yusuke Kawasaki. All rights reserved.\nThis program is free software; you can redistribute it and/or\nmodify it under the Artistic license. Or whatever license I choose,\nwhich I will do instead of keeping this documentation like it is.\n\n=cut\n// ========================================================================\n*/\n"]}