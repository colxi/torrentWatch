{"version":3,"sources":["../../../src/scripts/controllers/main.es6"],"names":[],"mappings":";;;;;;;;;AAKI,O,GAAM;AACT,iBADS,2BACM;AAAA;;AACd,YAAO,IAAI,OAAJ,CAAa,UAAC,OAAD,EAAS,MAAT,EAAmB;AACtC,YAAK,UAAL,GAAoB,WAApB;AACA,YAAK,UAAL,GAAmB,GAAG,UAAtB;AACA,YAAK,KAAL,GAAgB,GAAG,KAAnB;AACA,YAAK,QAAL,GAAiB,GAAG,QAApB;;;AAGA,SAAG,MAAH,CAAU,YAAV,GAAyB,KAAzB,C;;;AAGE,aAAO,aAAP,CAAqB,QAArB,CAA+B,EAAC,OAAM,wBAAP,EAA/B;;AAEF,SAAG,GAAH,CAAO,qCAAqC,GAAG,UAAH,EAA5C;;;AAGA,SAAG,GAAH,CAAO,mDAAP;AACA,SAAG,OAAH,CAAW,mBAAX,EAAgC,IAAhC,CAAsC,aAAK;AACxC,UAAG,yBAAH;AACF,UAAG,WAAH,GAAiB,IAAjB,CAAuB,aAAK;AAC3B;AACA,QAFD;AAGA,OALD;AAMA,MAtBM,CAAP;AAwBA,KA1BQ;AA4BT,aA5BS,uBA4BE;AACV,aAAQ,GAAR,CAAY,eAAZ;AACA,SAAI,QAAW,OAAO,SAAP,CAAiB,QAAjB,CAA0B,EAAE,MAAM,OAAR,EAA1B,EAA6C,CAA7C,CAAf;;;;;;;;;;;;;;;;;;;;;AAqBA,YAAO,IAAP,CAAa,MAAM,QAAN,CAAe,aAAf,CAA6B,cAA7B,CAAb,EAA4D,EAAE,OAAQ,GAAV,EAA5D;;AAEA,KArDQ;AAuDT,mBAvDS,2BAuDO,IAvDP,EAuDa,KAvDb,EAuDoB,KAvDpB,EAuD2B,MAvD3B,EAuDkC;AAC1C,SAAI,IAAI,MAAM,OAAN,CAAc,IAAd,CAAR;AACA,SAAG,MAAM,CAAC,CAAV,EAAa,MAAM,IAAN,CAAW,IAAX,EAAb,KACK,MAAM,MAAN,CAAa,CAAb,EAAgB,CAAhB;AACL,aAAQ,GAAR,CAAY,SAAZ;AACA;AA5DQ,I;;sBA+DK,I","file":"main.js","sourcesContent":["/* jsHint inline configuration : */\r\n/* jshint undef: true, unused: false */\r\n/* global chrome , rivets , pg , app */\r\n\r\n// let main extends pg.__Controller{\r\nlet main ={\r\n\t__constructor(){\r\n\t\treturn new Promise( (resolve,reject) =>{\r\n\t\t\tthis.currentTab  \t= 'tab-feeds';\r\n\t\t\tthis.categories \t= pg.categories;\r\n\t\t\tthis.feeds \t\t\t= pg.feeds;\r\n\t\t\tthis.logStore\t\t= pg.logStore;\r\n\r\n\t\t\t// Define pg App Name Reference\r\n\t\t\tpg.config.appReference = 'app'; // window.app\r\n\r\n  \t\t\t// set html file popup\r\n  \t\t\tchrome.browserAction.setPopup( {popup:'views/popup/popup.html'} );\r\n\r\n\t\t\tpg.log('*** Starting Torrent Observer v.' + pg.getVersion() );\r\n\r\n\t\t\t// require module libraries\r\n\t\t\tpg.log('main.__constructor() : Requiring JSON.parseXML...');\r\n\t\t\tpg.require('lib/JSON.parseXML').then( r => {\r\n\t  \t\t\tpg.countFeedsinAllCategories();\r\n\t\t\t\tpg.getAllFeeds().then( r => {\r\n\t\t\t\t\tresolve( );\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t},\r\n\r\n\tpopUpInit(){\r\n\t\tconsole.log('Popup opened!');\r\n\t\tlet popup \t\t\t= chrome.extension.getViews({ type: 'popup' })[0];\r\n\r\n\t\t//app.binder \t\t\t= popup.rivets;\r\n\t\t//app.bind \t\t\t= popup.rivets.bind;\r\n\t\t//app.watch \t\t\t= popup.sightglass;\r\n\t\t//popup.app \t\t\t= app;\r\n\r\n\t\t//popup.rivets \t\t= rivets;\r\n\t\t//popup.sightglass \t= sightglass;\r\n\r\n/*\r\n\t\tapp.binder.configure({\r\n\t\t\tprefix: 'rv', \t\t\t\t\t// Attribute prefix in templates\r\n\t\t\tpreloadData: true,\t\t\t\t// Preload templates with initial data on bind\r\n\t\t\trootInterface: '.',\t\t\t\t// Root sightglass interface for keypaths\r\n\t\t\ttemplateDelimiters: ['{', '}'],\t// Template delimiters for text bindings\r\n\t\t\t// Augment the event handler of the on-* binder\r\n\t\t\thandler: function(target, ev, binding) { return this.call(target, event, binding.view.models,binding); }\r\n\t\t});\r\n*/\r\n\r\n\t\trivets.bind( popup.document.querySelector('#app-wrapper') , { 'app' : app } );\r\n\t\t//pg.loadController('feeds');\r\n\t},\r\n\r\n\ttoogleArrayItem(item, array, event, object){\r\n\t\tlet i = array.indexOf(item);\r\n\t\tif(i === -1) array.push(item);\r\n\t\telse array.splice(i, 1);\r\n\t\tconsole.log(arguments);\r\n\t}\r\n}\r\n\r\nexport default main;\r\n"]}