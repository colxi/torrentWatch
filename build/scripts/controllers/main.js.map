{"version":3,"sources":["../../../src/scripts/controllers/main.es6"],"names":[],"mappings":";;;;;;;;;AAKI,M,GAAK;AACR,iBADQ,2BACO;AACd,YAAO,IAAI,OAAJ,CAAa,UAAC,OAAD,EAAS,MAAT,EAAmB;AACtC,UAAI,UAAJ,GAAmB,WAAnB;AACA,UAAI,UAAJ,GAAmB,GAAG,UAAtB;AACA,UAAI,KAAJ,GAAe,GAAG,KAAlB;AACA,UAAI,QAAJ,GAAgB,GAAG,QAAnB;AACA,UAAI,IAAJ,GAAW;AACV,cAAQ,GAAG,KADD;AAEV,mBAAa,GAAG;AAFN,OAAX;;;AAMA,SAAG,MAAH,CAAU,YAAV,GAAyB,KAAzB,C;;;AAGE,aAAO,aAAP,CAAqB,QAArB,CAA+B,EAAC,OAAM,wBAAP,EAA/B;;AAEF,SAAG,GAAH,CAAO,qCAAqC,GAAG,UAAH,EAA5C;;;AAGA,SAAG,GAAH,CAAO,kDAAP;AACA,SAAG,OAAH,CAAW,mBAAX,EAAgC,IAAhC,CAAsC,aAAK;AACxC,UAAG,yBAAH;AACF,UAAG,WAAH,GAAiB,IAAjB,CAAuB,aAAK;AAC3B;AACA,QAFD;AAGA,OALD;AAMA,MA1BM,CAAP;AA4BA,KA9BO;AAgCR,cAhCQ,wBAgCI;AACX,SAAI,GAAJ,CAAQ,iDAAR;;AAEA,SAAI,WAAY,OAAO,SAAP,CAAiB,QAAjB,CAA0B,EAAE,MAAM,OAAR,EAA1B,EAA6C,CAA7C,EAAgD,QAAhE;;AAEA,SAAI,UAAU,GAAG,IAAH,CAAS,SAAS,aAAT,CAAuB,SAAvB,CAAT,EAA6C,EAAE,OAAQ,GAAV,EAA7C,CAAd;;AAEA,SAAI,CAAC,IAAI,cAAJ,CAAmB,UAAnB,CAAL,EAAqC;AACpC,aAAO,cAAP,CAAsB,GAAtB,EAA2B,UAA3B,EAAuC;AACtC,cAAO,OAD+B;AAEtC,mBAAY,KAF0B;AAGtC,iBAAS,IAH6B;AAItC,qBAAc;AAJwB,OAAvC;AAMA,MAPD,MAOM,IAAI,QAAJ,CAAa,MAAb;AACN,KA/CO;AAmDR,YAnDQ,oBAmDC,IAnDD,EAmDM;AACb,SAAI,GAAJ,CAAQ,oCAAoC,IAApC,GAA2C,0BAAnD;;AAEA,SAAI,WAAY,OAAO,SAAP,CAAiB,QAAjB,CAA0B,EAAE,MAAM,OAAR,EAA1B,EAA6C,CAA7C,EAAgD,QAAhE;;AAEC,QAAG,QAAH,CAAY,IAAZ,EAAkB,IAAlB,CAAwB,iBAAQ;AAC/B,eAAS,aAAT,CAAuB,UAAvB,EAAmC,SAAnC,GAA+C,KAA/C;AACA,UAAI,QAAJ,CAAa,MAAb;AACA,UAAI,QAAJ,CAAa,KAAb;AACA,UAAI,QAAJ,CAAa,MAAb;AACA,UAAI,QAAJ,CAAa,IAAb;;;;;;;;;;;;;AAaA,MAlBD;;AAoBD,KA5EO;AA+ER,mBA/EQ,2BA+EQ,IA/ER,EA+Ec,KA/Ed,EA+EqB,KA/ErB,EA+E4B,MA/E5B,EA+EmC;AAC1C,SAAI,IAAI,MAAM,OAAN,CAAc,IAAd,CAAR;AACA,SAAG,MAAM,CAAC,CAAV,EAAa,MAAM,IAAN,CAAW,IAAX,EAAb,KACK,MAAM,MAAN,CAAa,CAAb,EAAgB,CAAhB;AACL,aAAQ,GAAR,CAAY,SAAZ;AACA;AApFO,I;AAuFL,O,GAAO,G;;sBACI,I","file":"main.js","sourcesContent":["/* jsHint inline configuration : */\r\n/* jshint undef: true, unused: false */\r\n/* global chrome , rivets , pg  */\r\n\r\n// let main extends pg.__Controller{\r\nlet app ={\r\n\t__constructor(){\r\n\t\treturn new Promise( (resolve,reject) =>{\r\n\t\t\tapp.currentTab  \t= 'tab-feeds';\r\n\t\t\tapp.categories \t\t= pg.categories;\r\n\t\t\tapp.feeds \t\t\t= pg.feeds;\r\n\t\t\tapp.logStore\t\t= pg.logStore;\r\n\t\t\tapp.Data = {\r\n\t\t\t\tFeeds : pg.feeds,\r\n\t\t\t\tCategories : pg.categories,\r\n\t\t\t}\r\n\r\n\t\t\t// Define pg App Name Reference\r\n\t\t\tpg.config.appReference = 'app'; // window.app\r\n\r\n  \t\t\t// set html file popup\r\n  \t\t\tchrome.browserAction.setPopup( {popup:'views/popup/popup.html'} );\r\n\r\n\t\t\tpg.log('*** Starting Torrent Observer v.' + pg.getVersion() );\r\n\r\n\t\t\t// require module libraries\r\n\t\t\tpg.log('app.__constructor() : Requiring JSON.parseXML...');\r\n\t\t\tpg.require('lib/JSON.parseXML').then( r => {\r\n\t  \t\t\tpg.countFeedsinAllCategories();\r\n\t\t\t\tpg.getAllFeeds().then( r => {\r\n\t\t\t\t\tresolve( );\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t},\r\n\r\n\tinitialize(){\r\n\t\tapp.log('app.initialize(): Popup opened! Binding view...');\r\n\t\t// overwrite DOCUMENT with popup document instance\r\n\t\tlet document  = chrome.extension.getViews({ type: 'popup' })[0].document;\r\n\t\t// Bind & attach rivets view to App controller as non-enumerable property\r\n\t\tlet rv_view = pg.bind( document.querySelector('#pg-app') , { 'app' : app } );\r\n\t\t// if first popup open , assign view; else update binding\r\n\t\tif( !app.hasOwnProperty('__view__') ){\r\n\t\t\tObject.defineProperty(app, '__view__', {\r\n\t\t\t\tvalue: rv_view,\r\n\t\t\t\tenumerable: false ,\r\n\t\t\t\twritable:true,\r\n\t\t\t\tconfigurable: true\r\n\t\t\t});\r\n\t\t}else app.__view__.update();\r\n\t},\r\n\r\n\r\n\r\n\tloadPage(page){\r\n\t\tapp.log('app.loadPage() : Loading Page \"' + page + '\"  ( Controller & View )');\r\n\t\t// overwrite DOCUMENT with popup document instance\r\n\t\tlet document  = chrome.extension.getViews({ type: 'popup' })[0].document;\r\n\t\t// pg.loadController(page).then( (controller) => {\r\n\t\t\tpg.loadView(page).then( _html =>{\r\n\t\t\t\tdocument.querySelector('#pg-view').innerHTML = _html;\r\n\t\t\t\tapp.__view__.update();\r\n\t\t\t\tapp.__view__.build();\r\n\t\t\t\tapp.__view__.unbind();\r\n\t\t\t\tapp.__view__.bind();\r\n\t\t\t\t// Bind & attach rivets view to controller as non-enumerable property\r\n\t\t\t\t/*\r\n\t\t\t\tlet rv_view =  pg.bind( document.querySelector('#pg-view') , { [page] : controller } );\r\n\t\t\t\tObject.defineProperty(controller, '__view__', {\r\n\t\t\t\t\tvalue: rv_view,\r\n\t\t\t\t\tenumerable: false,\r\n\t\t\t\t\twritable:true,\r\n\t\t\t\t\tconfigurable: true\r\n\t\t\t\t});\r\n\t\t\t\t// make App controller accessible to loaded view , appending it\r\n\t\t\t\tcontroller.__view__.update({ [page] : controller , app:app} );\r\n\t\t\t\t*/\r\n\t\t\t});\r\n\t\t// });\r\n\t},\r\n\r\n\r\n\ttoogleArrayItem(item, array, event, object){\r\n\t\tlet i = array.indexOf(item);\r\n\t\tif(i === -1) array.push(item);\r\n\t\telse array.splice(i, 1);\r\n\t\tconsole.log(arguments);\r\n\t}\r\n};\r\n\r\nlet main = app;\r\nexport default main;\r\n\r\n\r\n/*\r\n// let main extends pg.__Controller{\r\nlet main ={\r\n\t__constructor(){\r\n\t\treturn new Promise( (resolve,reject) =>{\r\n\t\t\tthis.currentTab  \t= 'tab-feeds';\r\n\r\n\t\t\t// Define pg App Name Reference\r\n\t\t\tpg.config.appReference = 'app'; // window.app\r\n\r\n  \t\t\t// set html file popup\r\n  \t\t\tchrome.browserAction.setPopup( {popup:'views/popup/popup.html'} );\r\n\r\n\t\t\tpg.log('*** Starting Torrent Observer v.' + pg.getVersion() );\r\n\r\n\t\t\t// require module libraries\r\n\t\t\tpg.log('main.__constructor() : Requiring JSON.parseXML...');\r\n\t\t\tpg.require('lib/JSON.parseXML').then( r => {\r\n\t  \t\t\tthis.countFeedsinAllCategories();\r\n\t\t\t\tthis.getAllFeeds().then( r => {\r\n\t\t\t\t\tresolve( );\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t},\r\n\r\n\tinitialize(){\r\n\t\tpg.log('main.initialize(): Popup opened! Binding view...');\r\n\t\t// overwrite DOCUMENT with popup document instance\r\n\t\tlet document  = chrome.extension.getViews({ type: 'popup' })[0].document;\r\n\t\t// Bind & attach rivets view to App controller as non-enumerable property\r\n\t\tlet rv_view = pg.bind( document.querySelector('#pg-app') , { 'app' : app } );\r\n\t\t// if first popup open , assign view; else update binding\r\n\t\tif( !this.hasOwnProperty('__view__') ){\r\n\t\t\tObject.defineProperty(app, '__view__', {\r\n\t\t\t\tvalue: rv_view,\r\n\t\t\t\tenumerable: false ,\r\n\t\t\t\twritable:true,\r\n\t\t\t\tconfigurable: true\r\n\t\t\t});\r\n\t\t}else this.__view__.update();\r\n\t},\r\n\r\n\tloadPage(page){\r\n\r\n\r\n\t\tpg.log('main.loadPage() : Loading Page \"' + page + '\"  ( Controller & View )');\r\n\t\t// overwrite DOCUMENT with popup document instance\r\n\t\tlet document  = chrome.extension.getViews({ type: 'popup' })[0].document;\r\n\t\tvar a = pg.loadController(page).then( (controller) => {\r\n\t\t\t//window[pg.config.appReference].view = controller;\r\n\t\t\tpg.loadView(page).then( _html =>{\r\n\t\t\t\tdocument.querySelector('#pg-view').innerHTML = _html;\r\n\t\t\t\t// Bind & attach rivets view to controller as non-enumerable property\r\n\t\t\t\tlet rv_view =  pg.bind( document.querySelector('#pg-view') , { [page] : controller } );\r\n\t\t\t\tObject.defineProperty(controller, '__view__', {\r\n\t\t\t\t\tvalue: rv_view,\r\n\t\t\t\t\tenumerable: false,\r\n\t\t\t\t\twritable:true,\r\n\t\t\t\t\tconfigurable: true\r\n\t\t\t\t});\r\n\t\t\t\t// make App controller accessible to loaded view , appending it\r\n\t\t\t\tcontroller.__view__.update({ [page] : controller , app:this} );\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t},\r\n\r\n\tData : {\r\n\t\tCategories : [\r\n\t\t\t{\r\n\t\t\t\tid \t\t: 'f11d24b3-be2f-4bdd-d0e0-2ebf9ba0f5c7',\r\n\t\t\t\tname \t: 'movies',\r\n\t\t\t\tfeeds \t: 0\r\n\t\t\t},{\r\n\t\t\t\tid \t\t: 'dd63224e-b59c-4b41-5f99-c63cffbbafe4',\r\n\t\t\t\tname \t: 'music',\r\n\t\t\t\tfeeds \t: 0\r\n\t\t\t},{\r\n\t\t\t\tid \t\t: '44748d67-be92-47a9-a5b6-de502f1e8cb5',\r\n\t\t\t\tname \t: 'software',\r\n\t\t\t\tfeeds \t: 0\r\n\t\t\t},{\r\n\t\t\t\tid \t\t: '91aa33c5-5099-48e8-b6a4-4a5946c0b617',\r\n\t\t\t\tname \t: 'others',\r\n\t\t\t\tfeeds \t: 0\r\n\t\t\t}\r\n\t\t],\r\n\t\tFeeds : [\r\n\t\t\t{\r\n\t\t\t\tid \t\t\t: 'a34d24b3-cc2f-6add-b2f0-5ebe9ac0f521',\r\n\t\t\t\tname \t\t: 'Mininova Movies',\r\n\t\t\t\turl \t\t: 'http://www.mininova.org/rss.xml?cat=4',\r\n\t\t\t\tproperies\t: ['title'],\r\n\t\t\t\tTTL \t\t: 10,\r\n\t\t\t\tcategories \t: ['f11d24b3-be2f-4bdd-d0e0-2ebf9ba0f5c7'],\r\n\t\t\t\tlastUpdate \t: null\r\n\t\t\t},{\r\n\t\t\t\tid \t\t\t: 'bdv424b6-cb1c-3aab-11b3-ac429bb0f530',\r\n\t\t\t\tname \t\t: 'YIFY Movies',\r\n\t\t\t\turl \t\t: 'https://yts.ag/rss',\r\n\t\t\t\tproperies\t: ['title'],\r\n\t\t\t\tTTL \t\t: 10,\r\n\t\t\t\tcategories \t: ['f11d24b3-be2f-4bdd-d0e0-2ebf9ba0f5c7'],\r\n\t\t\t\tlastUpdate \t: null\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\r\n\tgetCategoryById(id){\r\n\t\t\tlet i = this.Data.Categories.findIndex( cat=>(cat.id === id ) ? true : false );\r\n\t\t\treturn (i === -1) ? -1 : this.Data.Categories[i];\r\n\t},\r\n\r\n\tgetCategoryByName(id){\r\n\t\tlet i = this.Data.Categories.findIndex( cat=>(cat.name === id ) ? true : false );\r\n\t\treturn (i === -1) ? -1 : this.Data.Categories[i];\r\n\t},\r\n\r\n\tcountFeedsinCategory(id){\r\n\t\tlet category = this.getCategoryById(id);\r\n\t\tif(category === -1) return -1;\r\n\r\n\t\tcategory.feeds = 0;\r\n\t\tfor (let i=0; i < this.Data.Feeds.length; i++ ) if(this.Data.Feeds[i].categories.indexOf(id) !== -1) category.feeds++;\r\n\t\treturn category.feeds;\r\n\t},\r\n\r\n\tcountFeedsinAllCategories(){\r\n\t\tfor (let i=0; i < this.Data.Categories.length; i++ ) this.countFeedsinCategory( this.Data.Categories[i].id );\r\n\t\treturn true;\r\n\t},\r\n\r\n\tgetAllFeeds(){\r\n\t\treturn new Promise( (_resolve, _reject)=>{\r\n\t\t\tpg.log('pg.updateAllFeeds(): Updating all Feeds...');\r\n\t\t\tvar currentFeed = -1;\r\n\t\t\t// Loop through the Feeds with array.reduce...\r\n\t\t\tthis.Data.Feeds.reduce( (sequence) => {\r\n\t\t\t\treturn sequence.then( ()=> {\r\n\t\t\t\t\tcurrentFeed++;\r\n\t\t\t \t\treturn this.getFeed(currentFeed);\r\n\t\t\t\t}).then( (result)=> {\r\n\t\t\t\t\tif(result) pg.log('pg.updateAllFeeds(): Feed #'+ ( currentFeed + 1) +' ' + this.Data.Feeds[currentFeed].name + ' UPDATED' );\r\n\t\t\t    \telse  pg.log('pg.updateAllFeeds(): Feed #'+ ( currentFeed + 1) +' ' + this.Data.Feeds[currentFeed].name + ' FAILED' );\r\n\t\t\t  \t\tif( (currentFeed + 1)=== this.Data.Feeds.length) _resolve();\r\n\t\t\t  \t});\r\n\t\t\t} , Promise.resolve());\r\n\t\t});\r\n\t},\r\n\r\n\r\n\tgetFeed(i){\r\n\t\treturn new Promise( (_resolve, _reject)=>{\r\n\t\t\tif(i === undefined || i === null || i === '') return _reject(-1);\r\n\r\n\t\t\t// get feed (allow feed array index or string url feed)\r\n\t\t\tlet feed;\r\n\t\t\tif( isNaN(i) && typeof i === 'string' ) feed = { url : i , name : '***'};\r\n\t\t\telse feed = this.Data.Feeds[i];\r\n\r\n\t\t\t// block if requested feed does not exist\r\n\t\t\tif(feed === undefined) return _reject(-1);\r\n\r\n\t\t\tpg.log('pg.updateFeed() : Updating Feed from :'+ feed.url +' ( ' + feed.name + ' )' );\r\n\r\n\t\t\t//\r\n\t\t\t// Prepare Ajax request\r\n\t\t\t//\r\n\t\t\tlet request = new XMLHttpRequest();\r\n\t\t\trequest.open('get', feed.url, true);\r\n\r\n\t\t\t// RESPONSE OK\r\n\t\t\trequest.onload  = ()=>{\r\n\t\t\t\tlet parser = new DOMParser();\r\n\t\t\t   \tlet xmlDoc = parser.parseFromString(request.responseText,'text/xml');\r\n\t\t\t\tlet JSONxml = JSON.parseXML(xmlDoc);\r\n\r\n\t\t\t\trequest = null;\r\n\t\t\t\treturn _resolve(JSONxml);\r\n\t\t\t};\r\n\t\t\t// RESPONSE FAIL\r\n\t\t\trequest.onerror  = ()=>{\r\n\t\t\t\tpg.log('pg.getFeed(): Error on request.', request.statusText);\r\n\t\t\t\trequest = null;\r\n\t\t\t\treturn _resolve(false);\r\n\t\t\t};\r\n\t\t\t// Send Request\r\n\t\t\trequest.send(null);\r\n\t\t});\r\n\t},\r\n\r\n\ttoogleArrayItem(item, array, event, object){\r\n\t\tlet i = array.indexOf(item);\r\n\t\tif(i === -1) array.push(item);\r\n\t\telse array.splice(i, 1);\r\n\t\tconsole.log(arguments);\r\n\t}\r\n};\r\n\r\nexport default main;\r\n*/\r\n"]}