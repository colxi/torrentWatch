{"version":3,"sources":["app.es6"],"names":["clock","app","__constructor","pg","log","Promise","load","module","then","model","models","feedContents","getAll","regExp","FORM","validation","pattern","regExpInfo","title","i","storage","Data","feeds","length","feed","id","TTL","tasks","setInterval","get","checkInFeed","bind","undefined","readyState","resolve","config","location","toogleArrayItem","item","array","event","object","indexOf","push","splice","console","arguments"],"mappings":";;;;;AAAA;AACA;AACA;;AAEA,IAAIA,QAAQ,IAAZ;;AAEA,IAAIC,MAAK;AACRC,cADQ,2BACO;AAAA;;AACdC,KAAGC,GAAH,CAAO,qEAAP;AACAD,KAAGC,GAAH,CAAO,8DAAP;AACA,SAAO,IAAIC,OAAJ,CAAa,mBAAU;AAC7B;AACAF,MAAGG,IAAH,CAAQC,MAAR,CAAe,eAAf,EAAiC,iBAAjC,EACEC,IADF,CACQ;AAAA,WAAKL,GAAGG,IAAH,CAAQG,KAAR,CAAc,SAAd,EAA0B,cAA1B,CAAL;AAAA,IADR;AAEU;AAFV,IAGWD,IAHX,CAGiB;AAAA,WAAKL,GAAGO,MAAH,CAAUC,YAAV,CAAuBC,MAAvB,CAA8B,IAA9B,CAAL;AAAA,IAHjB,EAIWJ,IAJX,CAIiB,aAAI;AACnB;AACA,UAAKK,MAAL,GAAcV,GAAGW,IAAH,CAAQC,UAAR,CAAmBC,OAAjC;AACA,UAAKC,UAAL,GAAkBd,GAAGW,IAAH,CAAQC,UAAR,CAAmBG,KAArC;AACA;AACA,SAAI,IAAIC,IAAE,CAAV,EAAaA,IAAEhB,GAAGO,MAAH,CAAUU,OAAV,CAAkBC,IAAlB,CAAuBC,KAAvB,CAA6BC,MAA5C,EAAoDJ,GAApD,EAAwD;AACpD,SAAIK,OAAOrB,GAAGO,MAAH,CAAUU,OAAV,CAAkBC,IAAlB,CAAuBC,KAAvB,CAA6BH,CAA7B,CAAX;AACAhB,QAAGC,GAAH,CAAO,oDAAmDoB,KAAKC,EAAxD,GAA6D,UAA7D,GAAyED,KAAKE,GAA9E,GAAkF,GAAzF;AACAvB,QAAGO,MAAH,CAAUC,YAAV,CAAuBgB,KAAvB,CAA6BH,KAAKC,EAAlC,IAAwCG,YACvC,UAASH,EAAT,EAAY;AACXtB,SAAGC,GAAH,CAAO,yDAAyDqB,EAAhE;AACAtB,SAAGO,MAAH,CAAUC,YAAV,CAAuBkB,GAAvB,CAA4BJ,EAA5B,EAAiC,IAAjC,EACEjB,IADF,CACQ;AAAA,cAAIL,GAAGO,MAAH,CAAUC,YAAV,CAAuBmB,WAAvB,CAAoCL,EAApC,CAAJ;AAAA,OADR;AAEA,MAJD,CAIEM,IAJF,CAIOC,SAJP,EAIkBR,KAAKC,EAJvB,CADuC,EAKTD,KAAKE,GAAL,GAAW,EAAX,GAAgB,IALP,CAAxC;AAOA;AACD,UAAKO,UAAL,GAAkB,UAAlB;AACHC,YAAQ,IAAR;AACA,IAtBF;AAuBA,GAzBM,CAAP;AA0BA,EA9BO;;;AAgCRD,aAAa,SAhCL;;AAkCRE,SAAS,EAlCD;;AAoCRC,WAAW,YApCH;;AAsCRvB,SAAS,EAtCD;;AAwCRI,aAAa,EAxCL;;AA2CRoB,gBA3CQ,2BA2CQC,IA3CR,EA2CcC,KA3Cd,EA2CqBC,KA3CrB,EA2C4BC,MA3C5B,EA2CmC;AAC1C,MAAItB,IAAIoB,MAAMG,OAAN,CAAcJ,IAAd,CAAR;AACA,MAAGnB,MAAM,CAAC,CAAV,EAAaoB,MAAMI,IAAN,CAAWL,IAAX,EAAb,KACKC,MAAMK,MAAN,CAAazB,CAAb,EAAgB,CAAhB;AACL0B,UAAQzC,GAAR,CAAY0C,SAAZ;AACA;AAhDO,CAAT;;kBAmDe7C,G","file":"app.js","sourcesContent":["/* jsHint inline configuration : */\n/* jshint undef: true, unused: false */\n/* global chrome , System , pg , rivets , sightglass */\n\nlet clock = null;\n\nlet app ={\n\t__constructor(){\n\t\tpg.log('app.__constructor(): Application Controller Initialization started.');\n\t\tpg.log('app.__constructor(): Importing App Modules & dependencies...');\n\t\treturn new Promise( resolve =>{\n\t\t\t// load some required pg modules\n\t\t\tpg.load.module('JSON/parseXML' , 'FORM/validation')\n\t\t\t\t.then( r => pg.load.model('storage' , 'feedContents') )\n            \t// get all Feeds Contents\n            \t.then( r => pg.models.feedContents.getAll(true) )\n            \t.then( r =>{\n\t\t\t\t\t// make form validation resources bindable\n\t\t\t\t\tthis.regExp = pg.FORM.validation.pattern;\n\t\t\t\t\tthis.regExpInfo = pg.FORM.validation.title;\n\t\t\t\t\t// schedule feedcontents update...\n\t\t\t\t\tfor(let i=0; i<pg.models.storage.Data.feeds.length; i++){\n\t\t\t    \t\tlet feed = pg.models.storage.Data.feeds[i];\n\t\t\t    \t\tpg.log('app.__constructor(): Scheduling Feed Refresh : '+ feed.id + ' (TTL : '+ feed.TTL+')');\n\t\t\t    \t\tpg.models.feedContents.tasks[feed.id] = setInterval(\n\t\t\t    \t\t\tfunction(id){\n\t\t\t    \t\t\t\tpg.log('[Scheduled Task]: Refreshing FeedContents for feed #' + id);\n\t\t\t    \t\t\t\tpg.models.feedContents.get( id , true )\n\t\t\t    \t\t\t\t\t.then( r=> pg.models.feedContents.checkInFeed( id ) );\n\t\t\t    \t\t\t}.bind(undefined, feed.id) , (feed.TTL * 60 * 1000)\n\t\t\t    \t\t);\n\t\t\t    \t}\n\t\t\t    \tthis.readyState = 'complete';\n\t\t\t\t\tresolve(true);\n\t\t\t\t});\n\t\t});\n\t},\n\n\treadyState : 'loading',\n\n\tconfig : {},\n\n\tlocation : 'categories',\n\n\tregExp : {},\n\n\tregExpInfo : {},\n\n\n\ttoogleArrayItem(item, array, event, object){\n\t\tlet i = array.indexOf(item);\n\t\tif(i === -1) array.push(item);\n\t\telse array.splice(i, 1);\n\t\tconsole.log(arguments);\n\t}\n};\n\nexport default app;\n"]}