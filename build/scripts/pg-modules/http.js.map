{"version":3,"sources":["http.es6"],"names":[],"mappings":";;;;;;AACA,IAAI,OAAO,SAAP,IAAO,CAAS,GAAT,EAAa;;;AAGtB,MAAI,OAAO;;;AAGT,UAAM,cAAU,MAAV,EAAkB,GAAlB,EAAuB,IAAvB,EAA6B;;;AAGjC,UAAI,UAAU,IAAI,OAAJ,CAAa,UAAU,OAAV,EAAmB,MAAnB,EAA2B;;;AAGpD,YAAI,SAAS,IAAI,cAAJ,EAAb;AACA,YAAI,MAAM,GAAV;;AAEA,YAAI,SAAS,WAAW,MAAX,IAAqB,WAAW,KAAzC,CAAJ,EAAqD;AACnD,iBAAO,GAAP;AACA,cAAI,WAAW,CAAf;AACA,eAAK,IAAI,GAAT,IAAgB,IAAhB,EAAsB;AACpB,gBAAI,KAAK,cAAL,CAAoB,GAApB,CAAJ,EAA8B;AAC5B,kBAAI,UAAJ,EAAgB;AACd,uBAAO,GAAP;AACD;AACD,qBAAO,mBAAmB,GAAnB,IAA0B,GAA1B,GAAgC,mBAAmB,KAAK,GAAL,CAAnB,CAAvC;AACD;AACF;AACF;;AAED,eAAO,IAAP,CAAY,MAAZ,EAAoB,GAApB;AACA,eAAO,IAAP;;AAEA,eAAO,MAAP,GAAgB,YAAY;AAC1B,cAAI,KAAK,MAAL,IAAe,GAAf,IAAsB,KAAK,MAAL,GAAc,GAAxC,EAA6C;;AAE3C,oBAAQ,KAAK,QAAb;AACD,WAHD,MAGO;;AAEL,mBAAO,KAAK,UAAZ;AACD;AACF,SARD;AASA,eAAO,OAAP,GAAiB,YAAY;AAC3B,iBAAO,KAAK,UAAZ;AACD,SAFD;AAGD,OAlCa,CAAd;;;AAqCA,aAAO,OAAP;AACD;AA5CQ,GAAX;;;AAgDA,SAAO;AACL,WAAO,aAAS,IAAT,EAAe;AACpB,aAAO,KAAK,IAAL,CAAU,KAAV,EAAiB,GAAjB,EAAsB,IAAtB,CAAP;AACD,KAHI;AAIL,YAAQ,cAAS,IAAT,EAAe;AACrB,aAAO,KAAK,IAAL,CAAU,MAAV,EAAkB,GAAlB,EAAuB,IAAvB,CAAP;AACD,KANI;AAOL,WAAO,aAAS,IAAT,EAAe;AACpB,aAAO,KAAK,IAAL,CAAU,KAAV,EAAiB,GAAjB,EAAsB,IAAtB,CAAP;AACD,KATI;AAUL,cAAU,iBAAS,IAAT,EAAe;AACvB,aAAO,KAAK,IAAL,CAAU,QAAV,EAAoB,GAApB,EAAyB,IAAzB,CAAP;AACD;AAZI,GAAP;AAcD,CAjED;;kBAmEe,I","file":"http.js","sourcesContent":["//  source https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\r\nlet http = function(url){\r\n\r\n  // A small example of object\r\n  var core = {\r\n\r\n    // Method that performs the ajax request\r\n    ajax: function (method, url, args) {\r\n\r\n      // Creating a promise\r\n      var promise = new Promise( function (resolve, reject) {\r\n\r\n        // Instantiates the XMLHttpRequest\r\n        var client = new XMLHttpRequest();\r\n        var uri = url;\r\n\r\n        if (args && (method === 'POST' || method === 'PUT')) {\r\n          uri += '?';\r\n          var argcount = 0;\r\n          for (var key in args) {\r\n            if (args.hasOwnProperty(key)) {\r\n              if (argcount++) {\r\n                uri += '&';\r\n              }\r\n              uri += encodeURIComponent(key) + '=' + encodeURIComponent(args[key]);\r\n            }\r\n          }\r\n        }\r\n\r\n        client.open(method, uri);\r\n        client.send();\r\n\r\n        client.onload = function () {\r\n          if (this.status >= 200 && this.status < 300) {\r\n            // Performs the function \"resolve\" when this.status is equal to 2xx\r\n            resolve(this.response);\r\n          } else {\r\n            // Performs the function \"reject\" when this.status is different than 2xx\r\n            reject(this.statusText);\r\n          }\r\n        };\r\n        client.onerror = function () {\r\n          reject(this.statusText);\r\n        };\r\n      });\r\n\r\n      // Return the promise\r\n      return promise;\r\n    }\r\n  };\r\n\r\n  // Adapter pattern\r\n  return {\r\n    'get': function(args) {\r\n      return core.ajax('GET', url, args);\r\n    },\r\n    'post': function(args) {\r\n      return core.ajax('POST', url, args);\r\n    },\r\n    'put': function(args) {\r\n      return core.ajax('PUT', url, args);\r\n    },\r\n    'delete': function(args) {\r\n      return core.ajax('DELETE', url, args);\r\n    }\r\n  };\r\n};\r\n\r\nexport default http;\r\n"]}