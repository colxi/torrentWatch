{"version":3,"sources":["http.es6"],"names":["http","url","core","ajax","method","args","promise","Promise","resolve","reject","client","XMLHttpRequest","uri","argcount","key","hasOwnProperty","encodeURIComponent","open","send","onload","status","response","statusText","onerror"],"mappings":";;;;;AAAA;AACA,IAAIA,OAAO,SAAPA,IAAO,CAASC,GAAT,EAAa;;AAEtB;AACA,MAAIC,OAAO;;AAET;AACAC,UAAM,cAAUC,MAAV,EAAkBH,GAAlB,EAAuBI,IAAvB,EAA6B;;AAEjC;AACA,UAAIC,UAAU,IAAIC,OAAJ,CAAa,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;;AAEpD;AACA,YAAIC,SAAS,IAAIC,cAAJ,EAAb;AACA,YAAIC,MAAMX,GAAV;;AAEA,YAAII,SAASD,WAAW,MAAX,IAAqBA,WAAW,KAAzC,CAAJ,EAAqD;AACnDQ,iBAAO,GAAP;AACA,cAAIC,WAAW,CAAf;AACA,eAAK,IAAIC,GAAT,IAAgBT,IAAhB,EAAsB;AACpB,gBAAIA,KAAKU,cAAL,CAAoBD,GAApB,CAAJ,EAA8B;AAC5B,kBAAID,UAAJ,EAAgB;AACdD,uBAAO,GAAP;AACD;AACDA,qBAAOI,mBAAmBF,GAAnB,IAA0B,GAA1B,GAAgCE,mBAAmBX,KAAKS,GAAL,CAAnB,CAAvC;AACD;AACF;AACF;;AAEDJ,eAAOO,IAAP,CAAYb,MAAZ,EAAoBQ,GAApB;AACAF,eAAOQ,IAAP;;AAEAR,eAAOS,MAAP,GAAgB,YAAY;AAC1B,cAAI,KAAKC,MAAL,IAAe,GAAf,IAAsB,KAAKA,MAAL,GAAc,GAAxC,EAA6C;AAC3C;AACAZ,oBAAQ,KAAKa,QAAb;AACD,WAHD,MAGO;AACL;AACAZ,mBAAO,KAAKa,UAAZ;AACD;AACF,SARD;AASAZ,eAAOa,OAAP,GAAiB,YAAY;AAC3Bd,iBAAO,KAAKa,UAAZ;AACD,SAFD;AAGD,OAlCa,CAAd;;AAoCA;AACA,aAAOhB,OAAP;AACD;AA5CQ,GAAX;;AA+CA;AACA,SAAO;AACL,WAAO,aAASD,IAAT,EAAe;AACpB,aAAOH,KAAKC,IAAL,CAAU,KAAV,EAAiBF,GAAjB,EAAsBI,IAAtB,CAAP;AACD,KAHI;AAIL,YAAQ,cAASA,IAAT,EAAe;AACrB,aAAOH,KAAKC,IAAL,CAAU,MAAV,EAAkBF,GAAlB,EAAuBI,IAAvB,CAAP;AACD,KANI;AAOL,WAAO,aAASA,IAAT,EAAe;AACpB,aAAOH,KAAKC,IAAL,CAAU,KAAV,EAAiBF,GAAjB,EAAsBI,IAAtB,CAAP;AACD,KATI;AAUL,cAAU,iBAASA,IAAT,EAAe;AACvB,aAAOH,KAAKC,IAAL,CAAU,QAAV,EAAoBF,GAApB,EAAyBI,IAAzB,CAAP;AACD;AAZI,GAAP;AAcD,CAjED;;kBAmEeL,I","file":"http.js","sourcesContent":["//  source https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\nlet http = function(url){\n\n  // A small example of object\n  var core = {\n\n    // Method that performs the ajax request\n    ajax: function (method, url, args) {\n\n      // Creating a promise\n      var promise = new Promise( function (resolve, reject) {\n\n        // Instantiates the XMLHttpRequest\n        var client = new XMLHttpRequest();\n        var uri = url;\n\n        if (args && (method === 'POST' || method === 'PUT')) {\n          uri += '?';\n          var argcount = 0;\n          for (var key in args) {\n            if (args.hasOwnProperty(key)) {\n              if (argcount++) {\n                uri += '&';\n              }\n              uri += encodeURIComponent(key) + '=' + encodeURIComponent(args[key]);\n            }\n          }\n        }\n\n        client.open(method, uri);\n        client.send();\n\n        client.onload = function () {\n          if (this.status >= 200 && this.status < 300) {\n            // Performs the function \"resolve\" when this.status is equal to 2xx\n            resolve(this.response);\n          } else {\n            // Performs the function \"reject\" when this.status is different than 2xx\n            reject(this.statusText);\n          }\n        };\n        client.onerror = function () {\n          reject(this.statusText);\n        };\n      });\n\n      // Return the promise\n      return promise;\n    }\n  };\n\n  // Adapter pattern\n  return {\n    'get': function(args) {\n      return core.ajax('GET', url, args);\n    },\n    'post': function(args) {\n      return core.ajax('POST', url, args);\n    },\n    'put': function(args) {\n      return core.ajax('PUT', url, args);\n    },\n    'delete': function(args) {\n      return core.ajax('DELETE', url, args);\n    }\n  };\n};\n\nexport default http;\n"]}