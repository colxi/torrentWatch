{"version":3,"sources":["storage.es6"],"names":["storage","__constructor","Promise","pg","log","chrome","sync","get","Data","feeds","f","categories","c","watchers","w","length","resolve","onChange","onChanged","addListener","changes","namespace","key","hasOwnProperty","storageChange","console","oldValue","newValue","set"],"mappings":";;;;;AAAA;AACA;AACA;;AAGA,IAAIA,UAAU;AACbC,cADa,2BACE;AAAA;;AACd,SAAO,IAAIC,OAAJ,CAAY,mBAAS;AAC3BC,MAAGC,GAAH,CAAO,gFAAP;AACAC,UAAOL,OAAP,CAAeM,IAAf,CAAoBC,GAApB,CAAyB,OAAzB,EAAkC,aAAG;AACpCF,WAAOL,OAAP,CAAeM,IAAf,CAAoBC,GAApB,CAAyB,YAAzB,EAAuC,aAAG;AACzCF,YAAOL,OAAP,CAAeM,IAAf,CAAoBC,GAApB,CAAyB,UAAzB,EAAqC,aAAG;AACvC,YAAKC,IAAL,CAAUC,KAAV,GAAoBC,EAAED,KAAF,IAAa,EAAjC;AACG,YAAKD,IAAL,CAAUG,UAAV,GAAuBC,EAAED,UAAF,IAAgB,EAAvC;AACA,YAAKH,IAAL,CAAUK,QAAV,GAAuBC,EAAED,QAAF,IAAe,EAAtC;AACHV,SAAGC,GAAH,CAAO,wDAAsD,MAAKI,IAAL,CAAUC,KAAV,CAAgBM,MAAtE,GAA6E,aAA7E,GAA2F,MAAKP,IAAL,CAAUG,UAAV,CAAqBI,MAAhH,GAAuH,kBAAvH,GAA0I,MAAKP,IAAL,CAAUK,QAAV,CAAmBE,MAA7J,GAAoK,YAA3K;AACGC;AACA,MANJ;AAOG,KARJ;AASA,IAVD;AAWA,GAbM,CAAP;AAcA,EAhBY;;;AAkBZR,OAAO;AACDC,SAAQ,EADP;AAEDI,YAAW,EAFV;AAGDF,cAAa;AAHZ,EAlBK;;AAwBVM,WAAY,YAAU;AACxB,SAAOZ,OAAOL,OAAP,CAAekB,SAAf,CAAyBC,WAAzB,CAAqC,UAASC,OAAT,EAAkBC,SAAlB,EAA6B;AACxE,QAAK,IAAIC,GAAT,IAAgBF,OAAhB,EAAyB;AACxB,QAAI,CAACA,QAAQG,cAAR,CAAuBD,GAAvB,CAAL,EAAmC;AACnC,QAAIE,gBAAgBJ,QAAQE,GAAR,CAApB;AACAG,YAAQrB,GAAR,CAAY,iDACF,wCADV,EAEUkB,GAFV,EAGUD,SAHV,EAIUG,cAAcE,QAJxB,EAKUF,cAAcG,QALxB;AAMC;AACF,GAXM,CAAP;AAYG,EAbU,EAxBD;AAsCbrB,OAAK;AACJG,SAAO,iBAAU;AACb,UAAO,IAAIP,OAAJ,CAAY,UAASc,OAAT,EAAiB;AACtCX,WAAOL,OAAP,CAAeM,IAAf,CAAoBsB,GAApB,CAAwB,EAAC,SAAS5B,QAAQQ,IAAR,CAAaC,KAAvB,EAAxB,EAAwD;AAAA,YAAIO,QAAQ,IAAR,CAAJ;AAAA,KAAxD;AACG,IAFM,CAAP;AAGH,GALG;AAMJL,cAAY,sBAAU;AACnB,UAAO,IAAIT,OAAJ,CAAY,UAASc,OAAT,EAAiB;AACrCX,WAAOL,OAAP,CAAeM,IAAf,CAAoBsB,GAApB,CAAwB,EAAC,cAAc5B,QAAQQ,IAAR,CAAaG,UAA5B,EAAxB,EAAkE;AAAA,YAAIK,QAAQ,IAAR,CAAJ;AAAA,KAAlE;AACE,IAFM,CAAP;AAGF,GAVG;AAWJH,YAAU,oBAAU;AACjB,UAAO,IAAIX,OAAJ,CAAY,UAASc,OAAT,EAAiB;AACrCX,WAAOL,OAAP,CAAeM,IAAf,CAAoBsB,GAApB,CAAwB,EAAC,YAAY5B,QAAQQ,IAAR,CAAaK,QAA1B,EAAxB,EAA8D;AAAA,YAAIG,QAAQ,IAAR,CAAJ;AAAA,KAA9D;AACE,IAFM,CAAP;AAGF;AAfG,EAtCQ;AAuDbY,MAAK;AAvDQ,CAAd;;kBA0De5B,O","file":"storage.js","sourcesContent":["/* jsHint inline configuration : */\n/* jshint undef: true, unused: false */\n/* global chrome , System , pg , rivets , sightglass */\n\n\nlet storage = {\n\t__constructor(){\n\t\treturn new Promise(resolve=>{\n\t\t\tpg.log('[Model]:storage.__constructor() : Preparing for Initial Data Syncronization...');\n\t\t\tchrome.storage.sync.get( 'feeds', f=>{\n\t\t\t\tchrome.storage.sync.get( 'categories', c=>{\n\t\t\t\t\tchrome.storage.sync.get( 'watchers', w=>{\n\t\t\t\t\t\tthis.Data.feeds \t=  f.feeds \t\t|| [];\n\t\t    \t\t\tthis.Data.categories=  c.categories || [];\n\t\t    \t\t\tthis.Data.watchers \t=  w.watchers \t|| [];\n\t\t\t\t\t\tpg.log('[Model]:storage.__constructor() : Data Sync done. ['+this.Data.feeds.length+'] Feeds | ['+this.Data.categories.length+'] Categories | ['+this.Data.watchers.length+'] Watchers')\n\t\t    \t\t\tresolve();\n\t\t\t    \t});\n\t\t    \t});\n\t\t\t});\n\t\t});\n\t},\n\n \tData : {\n        feeds : [],\n        watchers : [],\n        categories : []\n    },\n\n    onChange : (function(){\n\t\treturn chrome.storage.onChanged.addListener(function(changes, namespace) {\n\t\t\tfor (let key in changes) {\n\t\t\t\tif( !changes.hasOwnProperty(key) ) continue;\n\t\t\t\tvar storageChange = changes[key];\n\t\t\t\tconsole.log('Storage key \"%s\" in namespace \"%s\" changed. ' +\n\t\t\t\t          'Old value was \"%s\", new value is \"%s\".',\n\t\t\t\t          key,\n\t\t\t\t          namespace,\n\t\t\t\t          storageChange.oldValue,\n\t\t\t\t          storageChange.newValue);\n\t\t\t\t}\n\t\t});\n    })(),\n\tsync:{\n\t\tfeeds: function(){\n\t    \treturn new Promise(function(resolve){\n\t\t\t\tchrome.storage.sync.set({'feeds': storage.Data.feeds} , r=> resolve(true) );\n\t\t    });\n\t\t},\n\t\tcategories: function(){\n\t\t   return new Promise(function(resolve){\n\t\t\t\tchrome.storage.sync.set({'categories': storage.Data.categories} , r=> resolve(true) );\n\t\t   });\n\t\t},\n\t\twatchers: function(){\n\t\t   return new Promise(function(resolve){\n\t\t\t\tchrome.storage.sync.set({'watchers': storage.Data.watchers} , r=> resolve(true) );\n\t\t   });\n\t\t},\n\t},\n\tset: {}\n};\n\nexport default storage;\n"]}