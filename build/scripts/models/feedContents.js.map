{"version":3,"sources":["feedContents.es6"],"names":[],"mappings":"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","file":"feedContents.js","sourcesContent":["/* jsHint inline configuration : */\r\n/* jshint undef: true, unused: false */\r\n/* global chrome , System , pg , rivets , sightglass */\r\n\r\n\r\nlet feedContents = {\r\n\t__constructor(){\r\n\t\t return new Promise(function(_resolve){\r\n\t\t\tpg.load.module('JSON/parseXML')\r\n\t\t\t\t.then( r => pg.load.model('feeds') )\r\n\t\t\t\t.then( r=> _resolve(r) );\r\n        });\r\n\t},\r\n\r\n \ttasks : [],\r\n\r\n\tscheduleUpdates(){\r\n\t    return new Promise( _resolve => {\r\n\t    \t_resolve();\r\n\t        /*\r\n\t        console.log('chromeExt.scheduler.initialize(): Scheduling SYNC for '+ chromeExt.Data.feeds.length+' feeds sources...');\r\n\t        console.log(chromeExt.Data);\r\n\t        for(let i=0; i<chromeExt.Data.feeds.length; i++){\r\n\t            console.log('chromeExt.scheduler.initialize(): Scheduling ' + chromeExt.Data.feeds[i].name +' (TTL : '+ chromeExt.Data.feeds[i].TTL + ' min)');\r\n\t            chromeExt.scheduler.tasks.push(\r\n\t                setInterval( function(){\r\n\t                    console.log('checking feed...');\r\n\t                }, chromeExt.Data.feeds[i].TTL * 60 * 1000)\r\n\t            );\r\n\t        }\r\n\t        */\r\n\t    });\r\n\t},\r\n\r\n\r\n\tgetAll(){\r\n\t\treturn new Promise( (_resolve, _reject)=>{\r\n\t\t\tpg.log('pg.updateAllFeeds(): Updating all Feeds...');\r\n\t\t\tvar currentFeed = -1;\r\n\t\t\t// Loop through the Feeds with array.reduce...\r\n\t\t\tapp.Data.feeds.reduce( (sequence) => {\r\n\t\t\t\treturn sequence.then( ()=> {\r\n\t\t\t\t\tcurrentFeed++;\r\n\t\t\t \t\treturn feedContents.get(app.Data.feeds[currentFeed].id);\r\n\t\t\t\t}).then( (result)=> {\r\n\t\t\t\t\tif(result) pg.log('pg.updateAllFeeds(): Feed #'+ ( currentFeed + 1) +' ' + app.Data.feeds[currentFeed].name + ' UPDATED' );\r\n\t\t\t    \telse  pg.log('pg.updateAllFeeds(): Feed #'+ ( currentFeed + 1) +' ' + app.Data.feeds[currentFeed].name + ' FAILED' );\r\n\t\t\t  \t\tif( (currentFeed + 1)=== app.Data.feeds.length) _resolve();\r\n\t\t\t  \t});\r\n\t\t\t} , Promise.resolve());\r\n\t\t});\r\n\t},\r\n\r\n\tget(id){\r\n\t\treturn new Promise( _resolve=>{\r\n\t\t\tif(id === undefined || id === null || id === '') return _resolve(-1);\r\n\r\n\t\t\t// get feed (allow feed Id index or string url feed)\r\n\t\t\tlet f;\r\n\r\n\t\t\tf = pg.models.feeds.get(id);\r\n\t\t\tif( f === -1 ) f = { url : id , name : '***', status : {}};\r\n\r\n\t\t\tf.status.code = 100;\r\n\t\t\tf.status.details = 'Updating...';\r\n\t\t\tf.status.lastCheck = new Date();\r\n\r\n\t\t\tpg.log('pg.updateFeed() : Updating Feed from :'+ f.url +' ( ' + f.name + ' )' );\r\n\r\n\t\t\t//\r\n\t\t\t// Prepare Ajax request\r\n\t\t\t//\r\n\t\t\tlet http = new XMLHttpRequest();\r\n\t\t\thttp.open('get', f.url, true);\r\n\r\n\t\t\t// RESPONSE OK\r\n\t\t\thttp.onload  = r=>{\r\n\t\t\t\tlet parser = new DOMParser();\r\n\t\t\t   \tlet xmlDoc = parser.parseFromString(http.responseText,'text/xml');\r\n\t\t\t\tlet JSONxml = pg.JSON.parseXML(xmlDoc, true);\r\n\r\n\t\t\t\tf.status.code = 200;\r\n\t\t\t\tf.status.details = 'Ok';\r\n\r\n\t\t\t\thttp = null;\r\n\t\t\t\treturn _resolve(JSONxml);\r\n\t\t\t};\r\n\t\t\t// RESPONSE FAIL\r\n\t\t\thttp.onerror  = r=>{\r\n\t\t\t\tpg.log('pg.getFeed(): Error on request... ' + http.statusText);\r\n\t\t\t\tf.status.code =  400;\r\n\t\t\t\tf.status.details = 'Fail';\r\n\t\t\t\thttp = null;\r\n\t\t\t\treturn _resolve(false);\r\n\t\t\t};\r\n\t\t\t// Send Request\r\n\t\t\thttp.send(null);\r\n\t\t});\r\n\t},\r\n};\r\n\r\nexport default feedContents;\r\n"]}