{"version":3,"sources":["feedsContents.es6"],"names":[],"mappings":"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","file":"feedsContents.js","sourcesContent":["/* jsHint inline configuration : */\r\n/* jshint undef: true, unused: false */\r\n/* global chrome , System , pg , rivets , sightglass */\r\n\r\n\r\nlet feedContents = {\r\n\t__constructor(){},\r\n\r\n \ttasks : [],\r\n\r\n\tscheduler(){\r\n\t    return new Promise( _resolve => {\r\n\t        console.log('chromeExt.scheduler.initialize(): Scheduling SYNC for '+ chromeExt.Data.feeds.length+' feeds sources...');\r\n\t        console.log(chromeExt.Data);\r\n\t        for(let i=0; i<chromeExt.Data.feeds.length; i++){\r\n\t            console.log('chromeExt.scheduler.initialize(): Scheduling ' + chromeExt.Data.feeds[i].name +' (TTL : '+ chromeExt.Data.feeds[i].TTL + ' min)');\r\n\t            chromeExt.scheduler.tasks.push(\r\n\t                setInterval( function(){\r\n\t                    console.log('checking feed...');\r\n\t                }, chromeExt.Data.feeds[i].TTL * 60 * 1000)\r\n\t            );\r\n\t        }\r\n\t    });\r\n\t},\r\n\r\n\tgetAll(){\r\n\t\treturn new Promise( (_resolve, _reject)=>{\r\n\t\t\tpg.log('pg.updateAllFeeds(): Updating all Feeds...');\r\n\t\t\tvar currentFeed = -1;\r\n\t\t\t// Loop through the Feeds with array.reduce...\r\n\t\t\tapp.Data.feeds.reduce( (sequence) => {\r\n\t\t\t\treturn sequence.then( ()=> {\r\n\t\t\t\t\tcurrentFeed++;\r\n\t\t\t \t\treturn feedContents.get(app.Data.feeds[currentFeed].id);\r\n\t\t\t\t}).then( (result)=> {\r\n\t\t\t\t\tif(result) pg.log('pg.updateAllFeeds(): Feed #'+ ( currentFeed + 1) +' ' + app.Data.feeds[currentFeed].name + ' UPDATED' );\r\n\t\t\t    \telse  pg.log('pg.updateAllFeeds(): Feed #'+ ( currentFeed + 1) +' ' + app.Data.feeds[currentFeed].name + ' FAILED' );\r\n\t\t\t  \t\tif( (currentFeed + 1)=== app.Data.feeds.length) _resolve();\r\n\t\t\t  \t});\r\n\t\t\t} , Promise.resolve());\r\n\t\t});\r\n\t},\r\n\r\n\tget(id){\r\n\t\treturn new Promise( (_resolve, _reject)=>{\r\n\t\t\tif(id === undefined || id === null || id === '') return _reject(-1);\r\n\r\n\t\t\t// get feed (allow feed Id index or string url feed)\r\n\t\t\tlet feed;\r\n\r\n\t\t\tfeed = app.getFeedById(id, true);\r\n\t\t\tif( feed === -1 ) feed = { url : id , name : '***', status : {}};\r\n\r\n\t\t\tfeed.status.code = 100;\r\n\t\t\tfeed.status.details = 'Updating...';\r\n\t\t\tfeed.status.lastCheck = new Date();\r\n\r\n\t\t\tpg.log('pg.updateFeed() : Updating Feed from :'+ feed.url +' ( ' + feed.name + ' )' );\r\n\r\n\t\t\t//\r\n\t\t\t// Prepare Ajax request\r\n\t\t\t//\r\n\t\t\tlet request = new XMLHttpRequest();\r\n\t\t\trequest.open('get', feed.url, true);\r\n\r\n\t\t\t// RESPONSE OK\r\n\t\t\trequest.onload  = ()=>{\r\n\t\t\t\tlet parser = new DOMParser();\r\n\t\t\t   \tlet xmlDoc = parser.parseFromString(request.responseText,'text/xml');\r\n\t\t\t\tlet JSONxml = pg.JSON.parseXML(xmlDoc, true);\r\n\r\n\t\t\t\tfeed.status.code = 200;\r\n\t\t\t\tfeed.status.details = 'Ok';\r\n\r\n\t\t\t\trequest = null;\r\n\t\t\t\treturn _resolve(JSONxml);\r\n\t\t\t};\r\n\t\t\t// RESPONSE FAIL\r\n\t\t\trequest.onerror  = ()=>{\r\n\t\t\t\tpg.log('pg.getFeed(): Error on request... ' + request.statusText);\r\n\t\t\t\tfeed.status.code =  400;\r\n\t\t\t\tfeed.status.details = 'Fail';\r\n\t\t\t\trequest = null;\r\n\t\t\t\treturn _resolve(false);\r\n\t\t\t};\r\n\t\t\t// Send Request\r\n\t\t\trequest.send(null);\r\n\t\t});\r\n\t},\r\n};\r\n\r\nexport default scheduler;\r\n"]}